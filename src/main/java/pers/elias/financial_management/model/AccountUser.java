package pers.elias.financial_management.model;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class AccountUser implements Serializable, UserDetails {
    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account_user.user_name
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    private String userName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account_user.user_pass
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    private String userPass;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account_user.roles
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    private String roles;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table account_user
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account_user.user_name
     *
     * @return the value of account_user.user_name
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    public String getUserName() {
        return userName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account_user.user_name
     *
     * @param userName the value for account_user.user_name
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    public void setUserName(String userName) {
        this.userName = userName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account_user.user_pass
     *
     * @return the value of account_user.user_pass
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    public String getUserPass() {
        return userPass;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account_user.user_pass
     *
     * @param userPass the value for account_user.user_pass
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    public void setUserPass(String userPass) {
        this.userPass = userPass;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account_user.roles
     *
     * @return the value of account_user.roles
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    public String getRoles() {
        return roles;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account_user.roles
     *
     * @param roles the value for account_user.roles
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    public void setRoles(String roles) {
        this.roles = roles;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account_user
     *
     * @mbggenerated Mon May 17 01:28:04 CST 2021
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", userName=").append(userName);
        sb.append(", userPass=").append(userPass);
        sb.append(", roles=").append(roles);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        String[] authorities = roles.split(",");
        List<SimpleGrantedAuthority> simpleGrantedAuthorities = new ArrayList<>();
        for (String role : authorities) {
            simpleGrantedAuthorities.add(new SimpleGrantedAuthority(role));
        }
        return simpleGrantedAuthorities;
    }

    @Override
    public String getPassword() {
        return userPass;
    }

    @Override
    public String getUsername() {
        return userName;
    }

    @Override
    public boolean isAccountNonExpired() {
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }
}
